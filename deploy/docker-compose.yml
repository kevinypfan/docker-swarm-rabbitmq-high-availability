version: "3.9"

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - rabbitmq-network
    deploy:
      placement:
        constraints:
          - node.role == manager

  consul-server:
    image: consul:1.15
    command: >
      agent
      -server
      -ui
      -bootstrap-expect=3
      -client=0.0.0.0
      -retry-join=tasks.consul-server
      -datacenter=dc1
      -data-dir=/consul/data
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    networks:
      - rabbitmq-network
    # volumes:
    #   - consul_data:/consul/data
    deploy:
      replicas: 3
      placement:
        max_replicas_per_node: 1 
        constraints:
          - node.role == manager
    ports:
      - target: 8500
        published: 3001
        protocol: tcp
        mode: host  # 使用 host 模式避免網路問題
      - target: 8600
        published: 8600
        protocol: udp
        mode: host
      - target: 8301
        published: 8301
        protocol: udp
        mode: host  # Serf LAN 端口
      - target: 8302
        published: 8302
        protocol: udp
        mode: host  # Serf WAN 端口
      - target: 8300
        published: 8300
        protocol: tcp
        mode: host  # RPC 端口

  rabbitmq:
    image: rabbitmq:4.1.0-management-alpine
    hostname: "{{.Node.Hostname}}.{{.Service.Name}}"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: test1234
      RABBITMQ_USE_LONGNAME: "true"
      RABBITMQ_ERLANG_COOKIE: "SWARM-COOKIE-SECRET-KEY-HERE"
      RABBITMQ_NODENAME: "rabbit@{{.Node.Hostname}}.{{.Service.Name}}"
    configs:
      - source: rabbitmq_config_rev2
        target: /etc/rabbitmq/rabbitmq.conf
      - source: rabbitmq_enabled_plugins
        target: /etc/rabbitmq/enabled_plugins
    networks:
      - rabbitmq-network
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    deploy:
      endpoint_mode: dnsrr
      replicas: 3
      placement:
        max_replicas_per_node: 1 
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 15s
        max_attempts: 3
        window: 60s
      labels:
        - "traefik.enable=true"
        
        # 主要 UI 路由
        - "traefik.http.routers.rabbitmq-ui.rule=PathPrefix(`/rabbitmq`) && !PathPrefix(`/rabbitmq/api`)"
        - "traefik.http.routers.rabbitmq-ui.entrypoints=web"
        - "traefik.http.routers.rabbitmq-ui.service=rabbitmq-ui"
        - "traefik.http.services.rabbitmq-ui.loadbalancer.server.port=15672"
        
        # API 路由 - 保持 /api 路徑
        - "traefik.http.routers.rabbitmq-api.rule=PathPrefix(`/rabbitmq/api`)"
        - "traefik.http.routers.rabbitmq-api.entrypoints=web"
        - "traefik.http.routers.rabbitmq-api.service=rabbitmq-api"
        - "traefik.http.services.rabbitmq-api.loadbalancer.server.port=15672"
        
        # UI 中介軟體
        - "traefik.http.middlewares.rabbitmq-ui-strip.stripprefix.prefixes=/rabbitmq"
        - "traefik.http.middlewares.rabbitmq-ui-redirect.redirectregex.regex=^(.*)/rabbitmq$$"
        - "traefik.http.middlewares.rabbitmq-ui-redirect.redirectregex.replacement=$${1}/rabbitmq/"
        - "traefik.http.routers.rabbitmq-ui.middlewares=rabbitmq-ui-redirect,rabbitmq-ui-strip"
        
        # API 中介軟體 - 重寫 /rabbitmq/api 為 /api
        - "traefik.http.middlewares.rabbitmq-api-strip.stripprefix.prefixes=/rabbitmq"
        - "traefik.http.routers.rabbitmq-api.middlewares=rabbitmq-api-strip"
        
        - "prometheus.metrics.port=15692"
      resources:
        limits:
          cpus: "1"
          memory: "1g"
        reservations:
          cpus: "0.5"
          memory: "512m"

  prometheus:
    image: prom/prometheus
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    ports:
      - "3002:9090"
    networks:
      - rabbitmq-network
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role == manager

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - rabbitmq-network
    configs:
      - source: datasources_config_rev1
        target: /etc/grafana/provisioning/datasources/datasources.yaml
      - source: dashboards_config_rev1
        target: /etc/grafana/provisioning/dashboards/dashboards.yaml
      - source: dashboard_1860_rev37
        target: /var/lib/grafana/dashboards/1860_rev37.json
      - source: dashboard_13702_rev3
        target: /var/lib/grafana/dashboards/13702_rev3.json
      - source: dashboard_17023_rev1
        target: /var/lib/grafana/dashboards/17023_rev1.json
      - source: dashboard_18345_rev1
        target: /var/lib/grafana/dashboards/18345_rev1.json
      - source: dashboard_10991_rev15
        target: /var/lib/grafana/dashboards/10991_rev15.json
      - source: dashboard_11340_rev8
        target: /var/lib/grafana/dashboards/11340_rev8.json
    deploy:
      placement:
        constraints:
          - node.role == manager

networks:
  rabbitmq-network:
    driver: overlay

configs:
  rabbitmq_config_rev2:
    file: ./rabbitmq.conf
  rabbitmq_enabled_plugins:
    file: ./enabled_plugins
  prometheus_config:
    file: ./prometheus.yml
  datasources_config_rev1:
    file: ./grafana/provisioning/datasources/datasources.yml
  dashboards_config_rev1:
    file: ./grafana/provisioning/dashboards/dashboards.yml
  dashboard_1860_rev37:
    file: ./grafana/dashboards/1860_rev37.json
  dashboard_13702_rev3:
    file: ./grafana/dashboards/13702_rev3.json
  dashboard_17023_rev1:
    file: ./grafana/dashboards/17023_rev1.json
  dashboard_18345_rev1:
    file: ./grafana/dashboards/18345_rev1.json
  dashboard_10991_rev15:
    file: ./grafana/dashboards/10991_rev15.json
  dashboard_11340_rev8:
    file: ./grafana/dashboards/11340_rev8.json

volumes:
  rabbitmq_data:
  rabbitmq_logs:
